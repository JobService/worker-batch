<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2016-2020 Micro Focus or one of its affiliates.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>${groupId}</groupId>
        <artifactId>${rootArtifactId}-aggregator</artifactId>
        <version>${version}</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>${groupId}</groupId>
    <artifactId>${rootArtifactId}-container</artifactId>
    <version>${version}</version>
    <packaging>pom</packaging>
    
    <properties>
        <${rootArtifactId}.container.name>rh7-artifactory.svs.hpeswlab.net:8443/caf/${rootArtifactId}:${project.version}
        </${rootArtifactId}.container.name>
        <${rootArtifactId}.container.alias>${rootArtifactId}</${rootArtifactId}.container.alias>
        <test.data>${project.basedir}/test-data</test.data>
        <caf.config.impl>config-file</caf.config.impl>
        <caf.codec.impl>codec-json</caf.codec.impl>
        <caf.worker-queue.impl>worker-queue-rabbit</caf.worker-queue.impl>
        <maven.failsafe.version>2.19</maven.failsafe.version>
        <maven.compiler.version>3.3</maven.compiler.version>
        <fabric8.docker.maven.version>0.16.7</fabric8.docker.maven.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${groupId}</groupId>
            <artifactId>${rootArtifactId}-batch-plugin</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.cafapi</groupId>
            <artifactId>caf-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.jobservice</groupId>
            <artifactId>worker-batch</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.cafapi.config</groupId>
            <artifactId>${caf.config.impl}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>${caf.worker-queue.impl}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.cafapi.codec</groupId>
            <artifactId>${caf.codec.impl}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.cafapi.decoder</groupId>
            <artifactId>decoder-js</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-store-fs</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-testing-util</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-testing-integration</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.jobservice</groupId>
            <artifactId>worker-batch-testing</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>use-default-fixed-ports</id>
            <properties>
                <worker.adminport>8081</worker.adminport>
                <rabbitmq.node.port>5672</rabbitmq.node.port>
                <rabbitmq.ctrl.port>15672</rabbitmq.ctrl.port>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!-- Unpack the base worker configuration files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>process-config-files</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.github.workerframework</groupId>
                                    <artifactId>worker-default-configs</artifactId>
                                    <outputDirectory>${project.build.directory}/config-files</outputDirectory>
                                    <excludes>META-INF/**</excludes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Process the local configuration files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>process-config-files</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/config-files</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/config</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <!-- properties used by worker-tester integration test framework -->
                        <docker.host.address>${docker.host.address}</docker.host.address>
                        <worker.adminport>${worker.adminport}</worker.adminport>
                        <rabbitmq.node.port>${rabbitmq.node.port}</rabbitmq.node.port>
                        <rabbitmq.ctrl.port>${rabbitmq.ctrl.port}</rabbitmq.ctrl.port>
                        <input.folder>${test.data}</input.folder>
                        <expected.folder>${test.data}</expected.folder>
                        <datastore.enabled>false</datastore.enabled>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <CAF_APPNAME>test/${rootArtifactId}</CAF_APPNAME>
                        <CAF_CONFIG_PATH>${project.basedir}/test-configs</CAF_CONFIG_PATH>
                        <CAF_INTEGRATIONTESTS_FS_PATH>datastore</CAF_INTEGRATIONTESTS_FS_PATH>
                        <!-- Environment variables needed for old style tests-->
                        <rabbit.port>${rabbitmq.node.port}</rabbit.port>
                        <rabbit.host>${docker.host.address}</rabbit.host>
                        <!--<task.template>${project.basedir}/template.yaml</task.template>-->
                    </environmentVariables>
                    <!--<debugForkedProcess>true</debugForkedProcess>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${fabric8.docker.maven.version}</version>
                <executions>
                    <execution>
                        <id>build-docker-container</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>upload-docker-container</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <image>${${rootArtifactId}.container.alias}</image>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <verbose>true</verbose>
                    <autoPull>always</autoPull>
                    <logDate>default</logDate>
                    <images>
                        <image>
                            <alias>webdav</alias>
                            <name>cloudesire/webdav</name>
                            <run>
                                <volumes>
                                    <bind>
                                        <volume>/srv/common/webdav</volume>
                                    </bind>
                                </volumes>
                                <ports>
                                    <port>${webdav.apache.port}:8080</port>
                                </ports>
                                <env>
                                    <APACHE_PORT>8080</APACHE_PORT>
                                </env>
                                <wait>
                                    <log>WebDAV Server startup complete</log>
                                    <http>
                                        <url>http://${docker.host.address}:${webdav.apache.port}</url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>
                        <!-- Start Rabbit image -->
                        <image>
                            <alias>rabbitmq</alias>
                            <name>rabbitmq:3-management</name>
                            <run>
                                <ports>
                                    <port>${rabbitmq.ctrl.port}:15672</port>
                                    <port>${rabbitmq.node.port}:5672</port>
                                </ports>
                                <wait>
                                    <log>Server startup complete</log>
                                    <http>
                                        <url>http://${docker.host.address}:${rabbitmq.ctrl.port}</url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>
                        <!-- End Rabbit image -->
                        <!-- Start Config image -->
                        <image>
                            <alias>config</alias>
                            <name>${project.artifactId}-test-config:${project.version}</name>
                            <build>
                                <assembly>
                                    <basedir>/config</basedir>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <directory>test-configs</directory>
                                                <outputDirectory>/</outputDirectory>
                                                <includes>
                                                    <include>*</include>
                                                </includes>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                            </build>
                        </image>
                        <!-- End Config image -->
                        <!-- Begin ${rootArtifactId} image -->
                        <image>
                            <alias>${${rootArtifactId}.container.alias}</alias>
                            <name>${${rootArtifactId}.container.name}</name>
                            <build>
                                <from>cafapi/opensuse-jre8:1</from>
                                <maintainer>joe.blogs@joesblog.net</maintainer>
                                <ports>
                                    <port>8080</port>
                                    <port>8081</port>
                                </ports>
                                <labels>
                                    <Build.Number>${version}</Build.Number>
                                    <Build.Date>${maven.build.timestamp}</Build.Date>
                                    <caf.worker-batch-framework.version>${caf.worker-batch-framework.version}
                                    </caf.worker-batch-framework.version>
                                </labels>
                                <cmd>/maven/worker.sh</cmd>
                                <assembly>
                                    <mode>tar</mode>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <lineEnding>unix</lineEnding>
                                                <includes>
                                                    <include>worker.sh</include>
                                                </includes>
                                                <fileMode>0755</fileMode>
                                            </fileSet>
                                            <fileSet>
                                                <lineEnding>unix</lineEnding>
                                                <includes>
                                                    <include>worker.yaml</include>
                                                </includes>
                                            </fileSet>
                                            <fileSet>
                                                <directory>${project.build.directory}/config-files</directory>
                                                <outputDirectory>config</outputDirectory>
                                            </fileSet>
                                        </fileSets>
                                        <dependencySets>
                                            <dependencySet>
                                                <useProjectArtifact>false</useProjectArtifact>
                                                <scope>runtime</scope>
                                            </dependencySet>
                                        </dependencySets>
                                    </inline>
                                </assembly>
                            </build>

                            <run>
                                <ports>
                                    <port>${worker.adminport}:8081</port>
                                </ports>
                                <env>
                                    <CAF_APPNAME>test/${rootArtifactId}</CAF_APPNAME>
                                    <CAF_CONFIG_PATH>/config</CAF_CONFIG_PATH>
                                </env>
                                <volumes>
                                    <from>
                                        <image>config</image>
                                        <image>webdav</image>
                                    </from>
                                </volumes>
                                <links>
                                    <link>rabbitmq</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${worker.adminport}</url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>
                        <!-- End ${rootArtifactId} image -->
                    </images>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
